events {
    worker_connections 1024;
}

http {
    upstream bitcoind {
        server bitcoind:18443;
    }

    server {
        listen 8332;
        server_name localhost;

        # Enable CORS for all requests
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }

        # Proxy to Bitcoin Core
        location / {
            proxy_pass http://bitcoind;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle basic auth for Bitcoin Core RPC
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
            
            # Important for JSON-RPC
            proxy_set_header Content-Type "application/json";
        }
    }
} 